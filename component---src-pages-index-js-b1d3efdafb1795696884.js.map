{"version":3,"sources":["webpack://yuinchien.com/./src/files/resume.pdf","webpack://yuinchien.com/./src/components/header.js","webpack://yuinchien.com/./src/pages/index.js"],"names":["Header","props","handleScroll","event","currentScroll","window","scrollY","setState","scrollUp","shadow","lastScroll","state","componentDidMount","addEventListener","this","componentWillUnmount","removeEventListener","render","id","className","Link","to","target","selected","rel","href","resume","React","defaultProps","Index","data","title","allMarkdownRemark","edges","map","node","key","fields","slug","G","image","frontmatter","cover","childImageSharp","gatsbyImageData","alt","description"],"mappings":"2KAAA,EAAe,IAA0B,qD,UCKnCA,E,YAEJ,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MAgBFC,aAAe,SAACC,GACd,IAAMC,EAAgBC,OAAOC,QACzBF,GAAiB,GACnB,EAAKG,SAAS,CAACC,UAAU,EAAOC,QAAQ,KAGtCL,EAAgB,EAAKM,YAAc,EAAKC,MAAMH,SAChD,EAAKD,SAAS,CAACC,UAAU,EAAOC,QAAQ,IAC/BL,EAAgB,EAAKM,YAAcN,EAAc,IAAM,EAAKO,MAAMH,UAC3E,EAAKD,SAAS,CAACC,UAAU,EAAMC,QAAQ,IAEzC,EAAKC,WAAaN,IA1BlB,EAAKM,WAAa,EAClB,EAAKC,MAAQ,CACXH,UAAU,EACVC,QAAQ,GALO,G,uCASnBG,kBAAA,WACEP,OAAOQ,iBAAiB,SAAUC,KAAKZ,e,EAGzCa,qBAAA,WACEV,OAAOW,oBAAoB,SAAUF,KAAKZ,e,EAiB5Ce,OAAA,WACE,OACE,uBAAKC,GAAG,MAAMC,WAAcL,KAAKH,MAAMH,SAAW,aAAa,IAAxC,KAA8CM,KAAKH,MAAMF,OAAS,SAAS,KAChG,gBAAC,EAAAW,KAAD,CAAMC,GAAG,IAAIC,OAAO,SAASH,UAAiC,aAAtBL,KAAKb,MAAMsB,SAAsB,WAAW,IAApF,YACA,gBAAC,EAAAH,KAAD,CAAMC,GAAG,SAASC,OAAO,SAASH,UAAiC,UAAtBL,KAAKb,MAAMsB,SAAmB,WAAW,IAAtF,SACA,qBAAGC,IAAI,sBAAsBC,KAAMC,EAAQJ,OAAO,UAAlD,UACA,qBAAGE,IAAI,sBAAsBC,KAAK,8BAA8BH,OAAO,UAAvE,W,GAvCaK,aAiDrB3B,EAAO4B,aAAe,CACpBL,SAAS,YAGX,S,mHClDMM,E,6FAgCJZ,OAAA,WAAU,IACAa,EAAShB,KAAKb,MAAd6B,KACR,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKC,MAAM,aACX,uBAAKb,GAAG,kBACN,gBAAC,IAAD,CAAQK,SAAS,aACjB,uBAAKL,GAAG,WAAWC,UAAU,cAC1BW,EAAKE,kBAAkBC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAChC,uBAAKhB,UAAU,UAAUiB,IAAKD,EAAKjB,IACjC,gBAAC,EAAAE,KAAD,CAAMC,GAAIc,EAAKE,OAAOC,MACpB,gBAAC,EAAAC,EAAD,CAAaC,MAAOL,EAAKM,YAAYC,MAAMC,gBAAgBC,gBAAiBC,IAAI,WAElF,uBAAK1B,UAAU,QACb,4BAAOgB,EAAKM,YAAYV,OACxB,wBAAMZ,UAAU,QAAhB,IAAyBgB,EAAKM,YAAYK,YAA1C,c,GA/CEnB,aA0DpB","file":"component---src-pages-index-js-b1d3efdafb1795696884.js","sourcesContent":["export default __webpack_public_path__ + \"static/resume-8edfd5c43081d258b56b96f19e8fe233.pdf\";","import PropTypes from \"prop-types\"\nimport React from \"react\"\nimport resume from \"../files/resume.pdf\"\nimport { Link } from \"gatsby\"\n\nclass Header extends React.Component  {\n\n  constructor(props) {\n    super(props);\n    this.lastScroll = 0;\n    this.state = {\n      scrollUp: false,\n      shadow: false\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.handleScroll);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  handleScroll = (event) => {\n    const currentScroll = window.scrollY;\n    if (currentScroll <= 20) {\n      this.setState({scrollUp: false, shadow: false});\n      return;\n    }\n    if (currentScroll < this.lastScroll && this.state.scrollUp) {\n      this.setState({scrollUp: false, shadow: true});\n    } else if (currentScroll > this.lastScroll && currentScroll>0 && !this.state.scrollUp) {\n      this.setState({scrollUp: true, shadow: false});\n    }\n    this.lastScroll = currentScroll;\n  }\n\n  render() {\n    return (\n      <div id=\"nav\" className={`${this.state.scrollUp ? \"scroll-top\":\"\"} ${this.state.shadow ? \"shadow\":\"\"}`}>\n        <Link to=\"/\" target=\"_blank\" className={this.props.selected===\"projects\"?\"selected\":\"\"}>Projects</Link>\n        <Link to=\"/about\" target=\"_blank\" className={this.props.selected===\"about\"?\"selected\":\"\"}>About</Link>\n        <a rel=\"noopener noreferrer\" href={resume} target=\"_blank\">Resume</a>\n        <a rel=\"noopener noreferrer\" href=\"https://store.yuinchien.com\" target=\"_blank\">Store</a>\n      </div>\n    );\n  }\n}\n\nHeader.propTypes = {\n  selected: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  selected: `projects`,\n}\n\nexport default Header\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { graphql } from 'gatsby'\nimport Layout from \"./../components/layout\"\nimport SEO from \"../components/seo\"\nimport Header from \"../components/header\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nclass Index extends React.Component  {\n\n  // constructor(props) {\n  //   super(props);\n  //   this.lastScroll = 0;\n  //   this.state = {\n  //     scrollUp: false\n  //   };\n  // }\n  //\n  // componentDidMount() {\n  //   window.addEventListener('scroll', this.handleScroll);\n  // }\n  //\n  // componentWillUnmount() {\n  //   window.removeEventListener('scroll', this.handleScroll);\n  // }\n  //\n  // handleScroll = (event) => {\n  //   const currentScroll = window.scrollY;\n  //   if (currentScroll === 0) {\n  //     this.setState({scrollUp: false});\n  //     return;\n  //   }\n  //   if (currentScroll < this.lastScroll && this.state.scrollUp) {\n  //     this.setState({scrollUp: false});\n  //   } else if (currentScroll > this.lastScroll && currentScroll>0 && !this.state.scrollUp) {\n  //     this.setState({scrollUp: true});\n  //   }\n  //   this.lastScroll = currentScroll;\n  // }\n\n  render() {\n    const { data } = this.props;\n    return (\n      <Layout>\n        <SEO title=\"Projects\" />\n        <div id=\"home-container\">\n          <Header selected=\"projects\" />\n          <div id=\"projects\" className=\"animate-up\">\n            {data.allMarkdownRemark.edges.map(({ node }) => (\n              <div className=\"project\" key={node.id}>\n                <Link to={node.fields.slug}>\n                  <GatsbyImage image={node.frontmatter.cover.childImageSharp.gatsbyImageData} alt=\"cover\"/>\n                </Link>\n                <div className=\"info\">\n                  <span>{node.frontmatter.title}</span>\n                  <span className=\"desc\"> {node.frontmatter.description} </span>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default Index;\n\nexport const query = graphql`{\n  site {\n    siteMetadata {\n      title\n    }\n  }\n  allMarkdownRemark(sort: {order: DESC, fields: [frontmatter___date]}) {\n    totalCount\n    edges {\n      node {\n        id\n        frontmatter {\n          title\n          description\n          cover {\n            childImageSharp {\n              gatsbyImageData(layout: FULL_WIDTH)\n            }\n          }\n        }\n        excerpt\n        fields {\n          slug\n        }\n      }\n    }\n  }\n}\n`\n"],"sourceRoot":""}