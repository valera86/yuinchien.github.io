{"version":3,"sources":["webpack:///./src/templates/project.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/seo.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_ref","data","post","markdownRemark","a","createElement","id","className","style","backgroundImage","frontmatter","cover","childImageSharp","fluid","src","title","dangerouslySetInnerHTML","__html","html","allMarkdownRemark","edges","map","_ref2","node","key","redirect","to","fields","slug","href","m","module","exports","require","default","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","render","children","propTypes","PropTypes","object","string","isRequired","func","SEO","description","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Layout","gatsby__WEBPACK_IMPORTED_MODULE_3__","Fragment","react_helmet__WEBPACK_IMPORTED_MODULE_5__","charSet","_components_seo__WEBPACK_IMPORTED_MODULE_4__","_public_static_d_755544856_json__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"component---src-templates-project-js-5201ed36a34c39274c6b.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { graphql } from 'gatsby'\nimport Layout from \"./../components/layout\"\n\n\nexport default ({ data }) => {\n  const post = data.markdownRemark\n  return (\n    <Layout>\n      <div id=\"hero\" className=\"section parallax\">\n        <div style={{backgroundImage: `url(${post.frontmatter.cover.childImageSharp.fluid.src})`}} />\n      </div>\n      <div id=\"content\" className=\"section\">\n        <h1 className=\"text\">{post.frontmatter.title}</h1>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n      </div>\n      <div className=\"section parallax\">\n        <div id=\"more-projects\">\n          {data.allMarkdownRemark.edges.map(({ node }) => (\n            <div className=\"project\" key={node.id}>\n              {node.frontmatter.redirect===\"\"\n                ? (<Link to={node.fields.slug}>{node.frontmatter.title}</Link>)\n                : (<a href={node.frontmatter.redirect}>{node.frontmatter.title}</a>)\n              }\n            </div>\n          ))}\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        cover {\n          childImageSharp {\n            fluid(maxWidth: 2560) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            redirect\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport SEO from \"../components/seo\"\nimport { Helmet } from \"react-helmet\"\n\nimport \"./styles.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>{data.site.siteMetadata.title}</title>\n        </Helmet>\n        <SEO title=\"Yuin Chien\" keywords={[`yuin chien`, `creative coding`, `generative`, `design`, `code`, `Yuin Chien LLC`, `Yuin`]} />\n        <main>{children}</main>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}