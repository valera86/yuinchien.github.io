{"version":3,"sources":["webpack:///./src/templates/project.js"],"names":["Project","props","handleModalOpen","event","setState","showMenu","state","render","data","this","post","markdownRemark","menuActive","title","frontmatter","id","className","to","allMarkdownRemark","edges","map","node","fields","slug","key","alt","src","cover","childImageSharp","fluid","role","tabIndex","onClick","onKeyDown","dangerouslySetInnerHTML","__html","html","React","Component","query"],"mappings":"yMAMMA,E,oBAEJ,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MAMFC,gBAAkB,SAAAC,GAChB,EAAKC,SAAS,CACZC,UAAW,EAAKC,MAAMD,YAPxB,EAAKC,MAAQ,CACXD,UAAU,GAHK,E,0GAanBE,OAAA,WAAU,IACAC,EAASC,KAAKR,MAAdO,KACFE,EAAOF,EAAKG,eACZC,EAAaH,KAAKH,MAAMD,SAAW,OAAS,GAClD,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKQ,MAAOH,EAAKI,YAAYD,QAC7B,yBAAKE,GAAG,SAASC,UAAS,GAAKJ,GAC7B,kBAAC,OAAD,CAAMG,GAAG,cAAcC,UAAU,MAAMC,GAAG,MACzCT,EAAKU,kBAAkBC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAChC,yBAAKL,UAAS,YAAaK,EAAKC,OAAOC,OAAOb,EAAKY,OAAOC,KAAO,WAAY,IAAMC,IAAKH,EAAKN,IAC3F,kBAAC,OAAD,CAAME,GAAII,EAAKC,OAAOC,MAAM,yBAAKE,IAAI,OAAOC,IAAKL,EAAKP,YAAYa,MAAMC,gBAAgBC,MAAMH,OAC9F,8BAAOL,EAAKP,YAAYD,YAI9B,yBAAKE,GAAG,kBAAkBC,UAAS,cAAgBJ,GACjD,yBAAKkB,KAAK,SAASC,SAAS,IAAIhB,GAAG,cAAcC,UAAS,OAASJ,EAAcoB,QAASvB,KAAKP,gBAAiB+B,UAAWxB,KAAKP,kBAChI,yBAAKa,GAAG,WACN,wBAAIC,UAAU,QAAQN,EAAKI,YAAYD,OACvC,yBAAKqB,wBAAyB,CAAEC,OAAQzB,EAAK0B,Y,GAnCnCC,IAAMC,WA0CbtC,YAER,IAAMuC,EAAK","file":"component---src-templates-project-js-b0a954e477df3d0929c5.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { graphql } from 'gatsby'\nimport Layout from \"./../components/layout\"\nimport SEO from \"../components/seo\"\n\nclass Project extends React.Component  {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      showMenu: false,\n    }\n  }\n\n  handleModalOpen = event => {\n    this.setState({\n      showMenu: !this.state.showMenu\n    })\n  }\n\n  render() {\n    const { data } = this.props;\n    const post = data.markdownRemark;\n    const menuActive = this.state.showMenu ? 'open' : '';\n    return (\n      <Layout>\n        <SEO title={post.frontmatter.title} />\n        <div id=\"drawer\" className={`${menuActive}`}>\n          <Link id=\"button-home\" className=\"fab\" to=\"/\"></Link>\n          {data.allMarkdownRemark.edges.map(({ node }) => (\n            <div className={`project ${node.fields.slug===post.fields.slug ? \"selected\": \"\"}`} key={node.id}>\n              <Link to={node.fields.slug}><img alt=\"hero\" src={node.frontmatter.cover.childImageSharp.fluid.src} /></Link>\n              <span>{node.frontmatter.title}</span>\n            </div>\n          ))}\n        </div>\n        <div id=\"project-wrapper\" className={`animate-up ${menuActive}`}>\n          <div role=\"button\" tabIndex=\"0\" id=\"button-menu\" className={`fab ${menuActive}`} onClick={this.handleModalOpen} onKeyDown={this.handleModalOpen}></div>\n          <div id=\"content\">\n            <h1 className=\"text\">{post.frontmatter.title}</h1>\n            <div dangerouslySetInnerHTML={{ __html: post.html }} />\n          </div>\n        </div>\n      </Layout>\n    )\n  }\n}\nexport default Project;\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        cover {\n          childImageSharp {\n            fluid(maxWidth: 2560) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            cover {\n              childImageSharp {\n                fluid(maxWidth: 1280) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}