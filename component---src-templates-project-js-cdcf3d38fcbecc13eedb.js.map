{"version":3,"sources":["webpack://yuinchien.com/./src/templates/project.js"],"names":["Project","props","handleModalOpen","event","setState","showMenu","state","render","data","this","siteTitle","site","siteMetadata","title","post","markdownRemark","menuActive","imagePath","getSrc","frontmatter","cover","childImageSharp","gatsbyImageData","location","imageSrc","description","pathname","id","className","Link","to","allMarkdownRemark","edges","map","node","fields","slug","key","G","image","getImage","alt","role","aria-label","tabIndex","onClick","onKeyDown","dangerouslySetInnerHTML","__html","html","React"],"mappings":"0LAOMA,E,YAEJ,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MAMFC,gBAAkB,SAAAC,GAChB,EAAKC,SAAS,CACZC,UAAW,EAAKC,MAAMD,YAPxB,EAAKC,MAAQ,CACXD,UAAU,GAHK,E,+BAanBE,OAAA,WAAU,IACAC,EAASC,KAAKR,MAAdO,KACFE,EAAYF,EAAKG,KAAKC,aAAaC,MACnCC,EAAON,EAAKO,eACZC,EAAaP,KAAKH,MAAMD,SAAW,OAAS,GAC5CY,GAAYC,OAAOJ,EAAKK,YAAYC,MAAMC,gBAAgBC,iBAEhE,OACE,gBAAC,IAAD,CAAQC,SAAUd,KAAKR,MAAMsB,SAAUV,MAAOH,GAC5C,gBAAC,IAAD,CACEc,SAAUP,EACVJ,MAAOC,EAAKK,YAAYN,MACxBY,YAAaX,EAAKK,YAAYM,YAC9BC,SAAUjB,KAAKR,MAAMsB,SAASG,WAEhC,uBAAKC,GAAG,SAASC,UAAS,GAAKZ,GAC7B,gBAAC,EAAAa,KAAD,CAAMF,GAAG,cAAcC,UAAU,MAAME,GAAG,MACzCtB,EAAKuB,kBAAkBC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAChC,uBAAKN,UAAS,YAAaM,EAAKC,OAAOC,OAAOtB,EAAKqB,OAAOC,KAAO,WAAY,IAAMC,IAAKH,EAAKP,IAC3F,gBAAC,EAAAE,KAAD,CAAMC,GAAII,EAAKC,OAAOC,MACpB,gBAAC,EAAAE,EAAD,CAAaC,OAAOC,OAASN,EAAKf,YAAYC,MAAMC,gBAAgBC,iBAAkBmB,IAAI,2BAE5F,4BAAOP,EAAKf,YAAYN,YAI9B,uBAAKc,GAAG,kBAAkBC,UAAS,cAAgBZ,GACjD,uBAAK0B,KAAK,SAASC,aAAW,SAASC,SAAS,IAAIjB,GAAG,cAAcC,UAAS,OAASZ,EAAc6B,QAASpC,KAAKP,gBAAiB4C,UAAWrC,KAAKP,kBACpJ,uBAAKyB,GAAG,WACN,sBAAIC,UAAU,QAAQd,EAAKK,YAAYN,OACvC,uBAAKkC,wBAAyB,CAAEC,OAAQlC,EAAKmC,Y,GA7CnCC,aAoDtB","file":"component---src-templates-project-js-cdcf3d38fcbecc13eedb.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { graphql } from 'gatsby'\nimport Layout from \"./../components/layout\"\nimport Seo from \"../components/seo\"\nimport { GatsbyImage, getSrc, getImage } from \"gatsby-plugin-image\"\n\nclass Project extends React.Component  {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      showMenu: false,\n    }\n  }\n\n  handleModalOpen = event => {\n    this.setState({\n      showMenu: !this.state.showMenu\n    })\n  }\n\n  render() {\n    const { data } = this.props;\n    const siteTitle = data.site.siteMetadata.title;\n    const post = data.markdownRemark;\n    const menuActive = this.state.showMenu ? 'open' : '';\n    const imagePath = getSrc(post.frontmatter.cover.childImageSharp.gatsbyImageData);\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <Seo\n          imageSrc={imagePath}\n          title={post.frontmatter.title}\n          description={post.frontmatter.description}\n          pathname={this.props.location.pathname}\n        />\n        <div id=\"drawer\" className={`${menuActive}`}>\n          <Link id=\"button-home\" className=\"fab\" to=\"/\"></Link>\n          {data.allMarkdownRemark.edges.map(({ node }) => (\n            <div className={`project ${node.fields.slug===post.fields.slug ? \"selected\": \"\"}`} key={node.id}>\n              <Link to={node.fields.slug}>\n                <GatsbyImage image={getImage(node.frontmatter.cover.childImageSharp.gatsbyImageData)} alt=\"please include an alt\" />\n              </Link>\n              <span>{node.frontmatter.title}</span>\n            </div>\n          ))}\n        </div>\n        <div id=\"project-wrapper\" className={`animate-up ${menuActive}`}>\n          <div role=\"button\" aria-label=\"button\" tabIndex=\"0\" id=\"button-menu\" className={`fab ${menuActive}`} onClick={this.handleModalOpen} onKeyDown={this.handleModalOpen}></div>\n          <div id=\"content\">\n            <h1 className=\"text\">{post.frontmatter.title}</h1>\n            <div dangerouslySetInnerHTML={{ __html: post.html }} />\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n}\nexport default Project;\n\nexport const query = graphql`query ($slug: String!) {\n  site {\n    siteMetadata {\n      title\n      author\n    }\n  }\n  markdownRemark(fields: {slug: {eq: $slug}}) {\n    html\n    fields {\n      slug\n    }\n    frontmatter {\n      title\n      description\n      cover {\n        childImageSharp {\n          gatsbyImageData(layout: FULL_WIDTH)\n        }\n      }\n    }\n  }\n  allMarkdownRemark(sort: {order: DESC, fields: [frontmatter___date]}) {\n    edges {\n      node {\n        id\n        frontmatter {\n          title\n          cover {\n            childImageSharp {\n              gatsbyImageData(layout: FULL_WIDTH)\n            }\n          }\n        }\n        fields {\n          slug\n        }\n      }\n    }\n  }\n}\n`\n"],"sourceRoot":""}